&НаКлиенте
Перем КешПараметров;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СоздатьЭлементыШкалыНавигации();
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыШкалыНавигации()
	
	//Струкутра = Новый Структура("ИмяСледующегоЭлемента,Заголовок","ГотовыеВариантыИнтервалИзБазы1","< 5 мин");
	//Элемент = ПрограммноеИзменениеФормСервер.ВставитьЭлемент(ЭтаФорма,"Назад5Мин",Тип("ПолеФормы"),Струкутра);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КешПараметров = новый Соответствие;
	
	#Если ВебКлиент Тогда
		СменитьВидЭлемента("ГотовыеВариантыИнтервалИзБазы,БыстрыйСкроллОкна");
	#КонецЕсли
	
	
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(300,"5 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(600,"10 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(1200,"20 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(1800,"30 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(3600,"1 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(5400,"1 ч 30 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(7200,"2 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(10800,"3 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(14400,"4 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(18000,"5 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(21000,"6 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(43200,"12 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(86400,"24 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(172800,"48 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы.СписокВыбора.Добавить(0,"произвольный");	
	
	Если НЕ ЗначениеЗаполнено(ГотовыеВариантыИнтервалИзБазы) Тогда
		ГотовыеВариантыИнтервалИзБазы=3600;
	КонецЕсли;
	
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(300,"5 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(600,"10 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(1200,"20 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(1800,"30 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(3600,"1 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(5400,"1 ч 30 мин");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(7200,"2 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(10800,"3 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(14400,"4 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(18000,"5 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(21000,"6 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(43200,"12 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(86400,"24 ч");
	Элементы.ГотовыеВариантыИнтервалИзБазы1.СписокВыбора.Добавить(172800,"48 ч");
	
	Элементы.ИнтервалАвтообновления.СписокВыбора.Добавить(0,"не использовать");
	Элементы.ИнтервалАвтообновления.СписокВыбора.Добавить(10,"10 с");
	Элементы.ИнтервалАвтообновления.СписокВыбора.Добавить(15,"15 с");
	Элементы.ИнтервалАвтообновления.СписокВыбора.Добавить(20,"20 с");
	Элементы.ИнтервалАвтообновления.СписокВыбора.Добавить(30,"30 с");
	Элементы.ИнтервалАвтообновления.СписокВыбора.Добавить(60,"60 с");
	Элементы.ИнтервалАвтообновления.СписокВыбора.Добавить(120,"2 мин");
	
	
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(-3600,"<1 ч");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(-1800,"<30 мин");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(-600,"<10 мин");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(-300,"<5 мин");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(0,"0");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(300,"5 мин>");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(600,"10 мин>");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(1800,"30 мин>");
	Элементы.БыстрыйСкроллОкна.СписокВыбора.Добавить(3600,"1 ч>");
	
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(0,"нет смещения");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(60,"1 мин");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(300,"5 мин");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(600,"10 мин");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(1800,"30 мин");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(3600,"1 ч");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(43200,"12 ч");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(86400,"1 сут");
	Элементы.ТаблицаИсточниковИзБазыСмещение.СписокВыбора.Добавить(172800,"2 сут");
	
	Элементы.ТипДиаграммыДанныхИзБазы.СписокВыбора.Добавить("График","График");
	Элементы.ТипДиаграммыДанныхИзБазы.СписокВыбора.Добавить("ГрафикСОбластями","ГрафикСОбластями");
	Элементы.ТипДиаграммыДанныхИзБазы.СписокВыбора.Добавить("ГрафикСОбластямиНормированный","ГрафикСОбластямиНормированный");
	Элементы.ТипДиаграммыДанныхИзБазы.СписокВыбора.Добавить("ГрафикПоШагам","ГрафикПоШагам");
	
	Если НЕ ЗначениеЗаполнено(ТипДиаграммыДанныхИзБазы) Тогда
		ТипДиаграммыДанныхИзБазы = "График";
	КонецЕсли;
	
	Элементы.ГруппировкаПоВремени.СписокВыбора.Добавить("НетГруппировки","нет");
	Элементы.ГруппировкаПоВремени.СписокВыбора.Добавить("Группировка1Мин","1 мин");
	Элементы.ГруппировкаПоВремени.СписокВыбора.Добавить("Группировка1Час","1 ч");
	//Элементы.ГруппировкаПоВремени.СписокВыбора.Добавить("Группировка1Сут","1 сут");
	
	Если НЕ ЗначениеЗаполнено(ГруппировкаПоВремени) Тогда
		ГруппировкаПоВремени = "НетГруппировки";
	КонецЕсли;
		
	
	Элементы.ПозицияРасположенияЛегенды.СписокВыбора.Добавить("нет","нет");
	Элементы.ПозицияРасположенияЛегенды.СписокВыбора.Добавить("низ","низ");
	Элементы.ПозицияРасположенияЛегенды.СписокВыбора.Добавить("верх","верх");
	Элементы.ПозицияРасположенияЛегенды.СписокВыбора.Добавить("право","право");
	Элементы.ПозицияРасположенияЛегенды.СписокВыбора.Добавить("лево","лево");
	
	Если НЕ ЗначениеЗаполнено(ПозицияРасположенияЛегенды) Тогда
		ПозицияРасположенияЛегенды="низ";
	КонецЕсли;		
	

	ОбновитьВидимость();
	
	ИнтервалАвтообновленияПриИзменении(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура СменитьВидЭлемента(ИменаЭлементов)	
	МассивИмен = СтрРазделить(ИменаЭлементов,",");
	
	Для каждого ИмяЭлемента из МассивИмен Цикл
		мЭлемент = Элементы.Найти(ИмяЭлемента);
		Если мЭлемент=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		мЭлемент.Вид=ВидПоляФормы.ПолеВвода;
		мЭлемент.КнопкаВыпадающегоСписка = Истина;
		мЭлемент.РежимВыбораИзСписка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимость()
	
	// проверим заполнение настроек
	мОтбор = Новый Структура("Выбрана",Истина);
	н_строки = ТаблицаИсточниковИзБазы.НайтиСтроки(мОтбор);
	Если н_строки.Количество()=0 Тогда
		Элементы.ГруппаНастройки.Показать();
	КонецЕсли;
	
	Если ГотовыеВариантыИнтервалИзБазы=0 Тогда
		Элементы.ИнтервалИзБазы.Видимость=Истина;
	Иначе
		Элементы.ИнтервалИзБазы.Видимость=Ложь;
	КонецЕсли;	
	
	Если н_строки.Количество()>0 Тогда
		ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
	КонецЕсли;
	
КонецПроцедуры


#Область ИзмененияРеквизитов

&НаКлиенте
Процедура ДатаСобытияИзБазыПриИзменении(Элемент)
	ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
КонецПроцедуры

&НаКлиенте
Процедура ГотовыеВариантыИнтервалИзБазыПриИзменении(Элемент)
	Если ГотовыеВариантыИнтервалИзБазы=0 Тогда
		Элементы.ИнтервалИзБазы.Видимость=Истина;
	Иначе
		ИнтервалИзБазы = ГотовыеВариантыИнтервалИзБазы;
		Элементы.ИнтервалИзБазы.Видимость=Ложь;
		ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БыстрыйСкроллОкнаПриИзменении(Элемент)
	ДатаСобытияИзБазы = ДатаСобытияИзБазы+БыстрыйСкроллОкна;
	ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
	БыстрыйСкроллОкна = 0;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсточниковИзБазыПриИзменении(Элемент)
	Для каждого стр из ТаблицаИсточниковИзБазы Цикл
		Если НЕ ЗначениеЗаполнено(стр.Представление) 
			И ЗначениеЗаполнено(стр.Свойство)
			И ЗначениеЗаполнено(стр.Замер) Тогда
			стр.Представление = Строка(стр.Свойство)+" ("+Строка(стр.Замер)+")";
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДиаграммуДанныхИзБазы(Команда)
	ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсточниковИзБазыВыбранаПриИзменении(Элемент)
	ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
КонецПроцедуры


&НаКлиенте
Процедура ИнтервалАвтообновленияПриИзменении(Элемент)
	Если ИнтервалАвтообновления=0 Тогда
		ОтключитьОбработчикОжидания("АвтообновлениеГрафикМониторинга");
	Иначе
		ПодключитьОбработчикОжидания("АвтообновлениеГрафикМониторинга",ИнтервалАвтообновления,Ложь );
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АвтообновлениеГрафикМониторинга() Экспорт
	ДатаСобытияИзБазы=ТекущаяДата();
	ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
КонецПроцедуры

#КонецОбласти

#Область ГрафикРисуем


&НаКлиенте
Процедура ОбновитьГрафикИсторииКлиент(ДатаОкончания,Интервал)
	
	Если Интервал=0 Тогда
		Интервал = 600;
	КонецЕсли;
	
	Если ДатаОкончания=Дата(1,1,1) Тогда
		ДатаОкончания = ТекущаяДата();
	КонецЕсли;
	
	ДатаНачала = ДатаОкончания-Интервал;
	
	КешПараметров.Вставить("ПредИнтервалНачало",КешПараметров.Получить("ИнтервалНачало"));
	КешПараметров.Вставить("ПредИнтервалОкончание",КешПараметров.Получить("ИнтервалОкончание"));
	
	КешПараметров.Вставить("ИнтервалНачало",ДатаНачала);
	КешПараметров.Вставить("ИнтервалОкончание",ДатаОкончания);
	
	ОбновитьГрафикИсторииСервер(ДатаНачала,ДатаОкончания,ТипДиаграммыДанныхИзБазы);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьГрафикИсторииСервер(ДатаНачала,ДатаОкончания,ИмяТипаДиаграммы)
	
	ВремяНачала = ТекущаяДата();
	мОтбор = Новый  Структура("Выбрана",Истина);
	ТаблицаЗамеров = ТаблицаИсточниковИзБазы.Выгрузить(ТаблицаИсточниковИзБазы.НайтиСтроки(мОтбор),);
	КешЧеловеческихПредставлений = Новый Соответствие();
	КешДублей = Новый Соответствие;
	Для каждого стр из ТаблицаЗамеров Цикл
		Ключ_UUID = строка(новый UUID());
		КоличествоДублей = КешДублей.Получить(стр.Представление);
		Если КоличествоДублей=Неопределено Тогда
			КешЧеловеческихПредставлений.Вставить(Ключ_UUID,стр.Представление);
			КешДублей.Вставить(стр.Представление,1);
		Иначе
			КешЧеловеческихПредставлений.Вставить(Ключ_UUID,стр.Представление+" дубль-"+КоличествоДублей);
			КешДублей.Вставить(стр.Представление,КоличествоДублей+1);
		КонецЕсли;
		стр.Представление = Ключ_UUID;
	КонецЦикла;
	
	ДиаграммаДанныхИзБазы.Очистить();
	ДиаграммаДанныхИзБазы = новый Диаграмма;
	ДиаграммаДанныхИзБазы.ПалитраЦветов=ПалитраЦветовДиаграммы.Авто;
	Если СглаживатьЛинии=Истина Тогда
		ДиаграммаДанныхИзБазы.РежимСглаживания = РежимСглаживанияДиаграммы.ГладкаяКривая;
	Иначе
		ДиаграммаДанныхИзБазы.РежимСглаживания = РежимСглаживанияДиаграммы.Нет;
	КонецЕсли;
	
	Если ПозицияРасположенияЛегенды="нет" Тогда
		ДиаграммаДанныхИзБазы.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Нет;
	ИначеЕсли ПозицияРасположенияЛегенды="низ" Тогда
		ДиаграммаДанныхИзБазы.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Низ;
	ИначеЕсли ПозицияРасположенияЛегенды="верх" Тогда
		ДиаграммаДанныхИзБазы.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Верх;
	ИначеЕсли ПозицияРасположенияЛегенды="право" Тогда
		ДиаграммаДанныхИзБазы.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Право;
	ИначеЕсли ПозицияРасположенияЛегенды="лево" Тогда
		ДиаграммаДанныхИзБазы.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Лево;
	Иначе
		ДиаграммаДанныхИзБазы.ОбластьЛегенды.Расположение = РасположениеЛегендыДиаграммы.Авто;
	КонецЕсли;
	
	Если ИмяТипаДиаграммы="ГрафикСОбластями" Тогда
		ДиаграммаДанныхИзБазы.ТипДиаграммы=ТипДиаграммы.ГрафикСОбластями;
	ИначеЕсли ИмяТипаДиаграммы="ГрафикПоШагам" Тогда
		ДиаграммаДанныхИзБазы.ТипДиаграммы=ТипДиаграммы.ГрафикПоШагам;
	ИначеЕсли ИмяТипаДиаграммы="ГрафикСОбластямиНормированный" Тогда
		ДиаграммаДанныхИзБазы.ТипДиаграммы=ТипДиаграммы.ГрафикСОбластямиНормированный;
	Иначе
		ДиаграммаДанныхИзБазы.ТипДиаграммы=ТипДиаграммы.График;
	КонецЕсли;


	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТЗ.Представление КАК СТРОКА(150)) КАК Представление,
	|	ВЫРАЗИТЬ(ТЗ.Замер КАК Справочник.Замеры) КАК Замер,
	|	ВЫРАЗИТЬ(ТЗ.Свойство КАК Справочник.Свойства) КАК Свойство,
	|	ВЫРАЗИТЬ(ТЗ.Смещение КАК ЧИСЛО(10, 0)) КАК Смещение,
	|	ВЫРАЗИТЬ(ТЗ.ТипСобытия КАК Справочник.События) КАК ТипСобытия,
	|	ВЫРАЗИТЬ(ТЗ.Ключ КАК Справочник.КлючиСобытия) КАК Ключ
	|ПОМЕСТИТЬ ВтТЗ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Замер,
	|	Свойство,
	|	ТипСобытия,
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТЗ.Представление КАК Представление,
	|	Т.ЗначениеЧисло КАК ЗначениеЧисло,
	|	Т.Ссылка.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	Справочник.СобытияЗамера.КлючевыеСвойства КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТЗ КАК ВтТЗ
	|		ПО Т.Ссылка.Владелец = ВтТЗ.Замер
	|			И Т.Свойство = ВтТЗ.Свойство
	|			И Т.Ссылка.ТипСобытия = ВтТЗ.ТипСобытия
	|			И Т.Ссылка.Ключ = ВтТЗ.Ключ
	|			И ВтТЗ.Смещение = 0	
	|ГДЕ
	|	(Т.Ссылка.Владелец, Т.Свойство, Т.Ссылка.ТипСобытия, Т.Ссылка.Ключ) В
	|			(ВЫБРАТЬ
	|				Т.Замер,
	|				Т.Свойство,
	|				Т.ТипСобытия,
	|				Т.Ключ
	|			ИЗ
	|				ВтТЗ КАК Т)
	|	И Т.Ссылка.НомерСтрокиФайла = 0
	|   И Т.Ссылка.ДатаСобытия МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|   И &ГРУППИРОВКА1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтТЗ.Представление КАК Представление,
	|	Т.ЗначениеЧисло КАК ЗначениеЧисло,
	|   &ДатаСобытия2 КАК ДатаСобытия
	|ИЗ
	|	Справочник.СобытияЗамера.КлючевыеСвойства КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТЗ КАК ВтТЗ
	|		ПО Т.Ссылка.Владелец = ВтТЗ.Замер
	|			И Т.Свойство = ВтТЗ.Свойство
	|			И Т.Ссылка.ТипСобытия = ВтТЗ.ТипСобытия
	|			И Т.Ссылка.Ключ = ВтТЗ.Ключ
	|			И ВтТЗ.Смещение > 0	
	|ГДЕ
	|	(Т.Ссылка.Владелец, Т.Свойство, Т.Ссылка.ТипСобытия, Т.Ссылка.Ключ) В
	|			(ВЫБРАТЬ
	|				Т.Замер,
	|				Т.Свойство,
	|				Т.ТипСобытия,
	|				Т.Ключ
	|			ИЗ
	|				ВтТЗ КАК Т)
	|	И Т.Ссылка.НомерСтрокиФайла = 0
	|	И ВЫБОР
	|			КОГДА ВтТЗ.Смещение = 60
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 60)
	|			КОГДА ВтТЗ.Смещение = 300
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 300)
	|			КОГДА ВтТЗ.Смещение = 600
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 600)
	|			КОГДА ВтТЗ.Смещение = 1800
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 1800)
	|			КОГДА ВтТЗ.Смещение = 3600
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 3600)
	|			КОГДА ВтТЗ.Смещение = 43200
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 43200)
	|			КОГДА ВтТЗ.Смещение = 86400
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 86400)
	|			КОГДА ВтТЗ.Смещение = 172800
	|				ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 172800)
	|			ИНАЧЕ Т.Ссылка.ДатаСобытия
	|		КОНЕЦ МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|   И &ГРУППИРОВКА2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСобытия";	
	
	
	
	Если НЕ ГруппировкаПоВремени="НетГруппировки" Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Т.ЗначениеЧисло КАК ЗначениеЧисло,","СРЕДНЕЕ(Т.ЗначениеЧисло) КАК ЗначениеЧисло,");	
		Если ГруппировкаПоВремени="Группировка1Час" Тогда 
			// дата
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"Т.Ссылка.ДатаСобытия КАК ДатаСобытия","НАЧАЛОПЕРИОДА(Т.Ссылка.ДатаСобытия,ЧАС) КАК ДатаСобытия");
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ДатаСобытия2",	
			"	ВЫБОР
			|		КОГДА ВтТЗ.Смещение = 60
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 60),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 300
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 300),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 600),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 1800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 1800),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 3600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 3600),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 43200
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 43200),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 86400
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 86400),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 172800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 172800),ЧАС)
			|		ИНАЧЕ Т.Ссылка.ДатаСобытия
			|	КОНЕЦ");			
			
			// группировка
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ГРУППИРОВКА1",
			"СГРУППИРОВАТЬ ПО 
			|	ВтТЗ.Представление,
			|	НАЧАЛОПЕРИОДА(Т.Ссылка.ДатаСобытия,ЧАС)");
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ГРУППИРОВКА2",
			"СГРУППИРОВАТЬ ПО 
			|	ВтТЗ.Представление,
			|	ВЫБОР
			|		КОГДА ВтТЗ.Смещение = 60
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 60),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 300
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 300),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 600),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 1800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 1800),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 3600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 3600),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 43200
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 43200),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 86400
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 86400),ЧАС)
			|		КОГДА ВтТЗ.Смещение = 172800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 172800),ЧАС)
			|		ИНАЧЕ Т.Ссылка.ДатаСобытия
			|	КОНЕЦ");
		ИначеЕсли ГруппировкаПоВремени="Группировка1Мин" Тогда 
			// дата
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"Т.Ссылка.ДатаСобытия КАК ДатаСобытия","НАЧАЛОПЕРИОДА(Т.Ссылка.ДатаСобытия,МИНУТА) КАК ДатаСобытия");			
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ДатаСобытия2",	
			"	ВЫБОР
			|		КОГДА ВтТЗ.Смещение = 60
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 60),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 300
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 300),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 600),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 1800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 1800),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 3600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 3600),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 43200
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 43200),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 86400
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 86400),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 172800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 172800),МИНУТА)
			|		ИНАЧЕ Т.Ссылка.ДатаСобытия
			|	КОНЕЦ");  			
			
			
			// группировка
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ГРУППИРОВКА1",
			"СГРУППИРОВАТЬ ПО 
			|	ВтТЗ.Представление,
			|	НАЧАЛОПЕРИОДА(Т.Ссылка.ДатаСобытия,МИНУТА)");
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ГРУППИРОВКА2",
			"СГРУППИРОВАТЬ ПО 
			|	ВтТЗ.Представление,
			|	ВЫБОР
			|		КОГДА ВтТЗ.Смещение = 60
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 60),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 300
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 300),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 600),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 1800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 1800),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 3600
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 3600),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 43200
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 43200),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 86400
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 86400),МИНУТА)
			|		КОГДА ВтТЗ.Смещение = 172800
			|			ТОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 172800),МИНУТА)
			|		ИНАЧЕ Т.Ссылка.ДатаСобытия
			|	КОНЕЦ");
		КонецЕсли;		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ГРУППИРОВКА1","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ГРУППИРОВКА2","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ДатаСобытия2",	
			"	ВЫБОР
			|		КОГДА ВтТЗ.Смещение = 60
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 60)
			|		КОГДА ВтТЗ.Смещение = 300
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 300)
			|		КОГДА ВтТЗ.Смещение = 600
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 600)
			|		КОГДА ВтТЗ.Смещение = 1800
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 1800)
			|		КОГДА ВтТЗ.Смещение = 3600
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 3600)
			|		КОГДА ВтТЗ.Смещение = 43200
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 43200)
			|		КОГДА ВтТЗ.Смещение = 86400
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 86400)
			|		КОГДА ВтТЗ.Смещение = 172800
			|			ТОГДА ДОБАВИТЬКДАТЕ(Т.Ссылка.ДатаСобытия, СЕКУНДА, 172800)
			|		ИНАЧЕ Т.Ссылка.ДатаСобытия
			|	КОНЕЦ ");
		
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("ТЗ", ТаблицаЗамеров);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	//Запрос.УстановитьПараметр("Ключ", key);
	
	
	КешСерий = Новый Соответствие;
	КешКлючей = Новый Соответствие;
	МассивКлючей = Новый Массив;
	Для каждого стр из ТаблицаЗамеров Цикл
		МассивКлючей.Добавить(стр.Представление);
		СерияОкно = ДиаграммаДанныхИзБазы.УстановитьСерию(КешЧеловеческихПредставлений.Получить(стр.Представление));
		КешСерий.Вставить(стр.Представление,СерияОкно);
		КешКлючей.Вставить(стр.Представление,стр.Представление);
	КонецЦикла;
	
	ТаблицаДанныхИзБазы =  Запрос.Выполнить().Выгрузить();
	
	//Сообщить("Время запроса: "+(ТекущаяДата()-ВремяНачала));
	
	КешПредыдущих = Новый Соответствие;
	ПредыдущаяДатаСобытия = Неопределено;
	Если ТаблицаДанныхИзБазы.Количество()>0 Тогда
		ПредыдущаяДатаСобытия = ТаблицаДанныхИзБазы[0].ДатаСобытия - Секунда(ТаблицаДанныхИзБазы[0].ДатаСобытия);
	КонецЕсли;
	
	МассивНомрированныйИзБазы = Новый Массив;
	СтруктураДанных = Новый Соответствие();
	ПредыдущаяСтруктураДанных = Новый Соответствие();
	КлючейПоДатаСобытия = 0;
	
	
	Для каждого стр_данных из ТаблицаДанныхИзБазы Цикл
		
		// округлим до минут
		ДатаСобытия = стр_данных.ДатаСобытия - Секунда(стр_данных.ДатаСобытия);
		
		ОбновитьГрафикИсторииКлиентФрагмент(ДатаСобытия, КлючейПоДатаСобытия, МассивКлючей, МассивНомрированныйИзБазы, ПредыдущаяДатаСобытия, ПредыдущаяСтруктураДанных, СтруктураДанных);
		
		Ключ = КешКлючей.Получить(СокрЛП(стр_данных.Представление));
		СтруктураДанных.Вставить(Ключ,стр_данных.ЗначениеЧисло);
		КлючейПоДатаСобытия = КлючейПоДатаСобытия+1;
		
	КонецЦикла;
	
	
	ОбновитьГрафикИсторииКлиентФрагмент(Неопределено, КлючейПоДатаСобытия, МассивКлючей, МассивНомрированныйИзБазы, ПредыдущаяДатаСобытия, ПредыдущаяСтруктураДанных, СтруктураДанных);
	
	//Сообщить("Время обработки: "+(ТекущаяДата()-ВремяНачала));
	
	// если первый из элементов пустой, тогда найдем последующий
	МассивПустых = новый Массив;
	ПрерватьЦикл = Ложь;
	СтруктураЗаполнения = Неопределено;
	Для каждого стр из МассивНомрированныйИзБазы Цикл
		
		ЕстьПустые = Ложь;
		
		Если ПрерватьЦикл = Истина Тогда			
			Если МассивПустых.Количество()>0 Тогда
				Для каждого стр_пуст из МассивПустых Цикл
					Для каждого стр_данных из стр_пуст.СтруктураДанных Цикл
						Если стр_данных.Значение=Неопределено Тогда
							стр_пуст.СтруктураДанных.Вставить(стр_данных.Ключ,СтруктураЗаполнения.СтруктураДанных.Получить(стр_данных.Ключ));
						КонецЕсли;
					КонецЦикла;					
				КонецЦикла;
			КонецЕсли;			
			Прервать;
		КонецЕсли;

			
		Для каждого стр_данных из стр.СтруктураДанных Цикл
			Если стр_данных.Значение=Неопределено Тогда
				МассивПустых.Добавить(стр);
				ЕстьПустые=Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьПустые=Ложь Тогда 
			ПрерватьЦикл=Истина;			
			СтруктураЗаполнения = стр;
		КонецЕсли;
		
	КонецЦикла;

	//Сообщить("Время 2-й обработки: "+(ТекущаяДата()-ВремяНачала));
	
	ш=0;	
	Для каждого стр из МассивНомрированныйИзБазы Цикл
		ш=ш+1;
		Для каждого стр_дан из стр.СтруктураДанных Цикл
			
			// округлим до минут
			ДатаСобытия = стр.ДатаСобытия - Секунда(стр.ДатаСобытия);
			Ключ = стр_дан.Ключ;
			
			СерияОкно = КешСерий.Получить(Ключ);
			Если НЕ СерияОкно=Неопределено Тогда
				ТочкаДиаграммы = ДиаграммаДанныхИзБазы.УстановитьТочку(ДатаСобытия);
				Если ш=МассивНомрированныйИзБазы.Количество() Тогда
					ТочкаДиаграммы.ПриоритетЦвета=Истина;
					ТочкаДиаграммы.Цвет=WebЦвета.АкварельноСиний; 
				КонецЕсли;
				// добавим значение	
				ДиаграммаДанныхИзБазы.УстановитьЗначение(ТочкаДиаграммы, СерияОкно, стр_дан.Значение);
			КонецЕсли;
			
		КонецЦикла;		
		
	КонецЦикла;
	
	
	// отобразим значение для последних точек
	Если ДиаграммаДанныхИзБазы.Точки.Количество()>0 Тогда
		Для каждого СерияКлюч из КешСерий Цикл
			СерияОкно = СерияКлюч.Значение;                             
			
			//Добавляем информационную линию для отображения текущего значения
			ИнформационнаяЛиния = ДиаграммаДанныхИзБазы.ИнформационныеЛинииЗначений.Добавить();
			ИнформационнаяЛиния.Линия = новый Линия(ТипЛинииДиаграммы.НетЛинии, 0);
			ИнформационнаяЛиния.ОбластьПодписи.Положение = ПоложениеПодписейКДиаграмме.ПравоВерх;
			
			Точка = ДиаграммаДанныхИзБазы.Точки.Получить(ДиаграммаДанныхИзБазы.Точки.Количество()-1);
			Значение = ДиаграммаДанныхИзБазы.ПолучитьЗначение(Точка,СерияОкно);
			//ИнформационнаяЛиния = ДиаграммаДанныхИзБазы.ИнформационныеЛинииЗначений.Получить(0);
			Если НЕ Значение.Значение=Неопределено Тогда
				ИнформационнаяЛиния.Значение = Значение.Значение;
			КонецЕсли;
			ИнформационнаяЛиния.ТекстПодписи = 
			Формат(Значение.Значение, ДиаграммаДанныхИзБазы.ОбластьПостроения.ШкалаЗначений.ФорматПодписей);
			
		КонецЦикла;	
	КонецЕсли;
	
	
	//Сообщить("Время отрисовки: "+(ТекущаяДата()-ВремяНачала));
	
	//АдресХранилищаДанныхИзБазы = ПоместитьВоВременноеХранилище(МассивНомрированныйИзБазы,ЭтаФорма.УникальныйИдентификатор);	
	
	//Сообщить("Время хранлище: "+(ТекущаяДата()-ВремяНачала));
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьГрафикИсторииКлиентФрагмент(Знач ДатаСобытия, КлючейПоДатаСобытия, Знач МассивКлючей, Знач МассивНомрированный, ПредыдущаяДатаСобытия, ПредыдущаяСтруктураДанных, СтруктураДанных)
	
	Перем стр;
	
	Если НЕ ПредыдущаяДатаСобытия = ДатаСобытия Тогда
		МассивНомрированный.Добавить(Новый Структура("ДатаСобытия,СтруктураДанных",ПредыдущаяДатаСобытия,СтруктураДанных));
		ПредыдущаяДатаСобытия = ДатаСобытия;
		//проставим если не было значений по свойству
		Если КлючейПоДатаСобытия<МассивКлючей.Количество() Тогда
			Для каждого стр из МассивКлючей Цикл 
				Если СтруктураДанных.Получить(стр)=Неопределено Тогда
					СтруктураДанных.Вставить(стр,ПредыдущаяСтруктураДанных.Получить(стр));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ПредыдущаяСтруктураДанных = СтруктураДанных;			
		СтруктураДанных = Новый Соответствие();
		КлючейПоДатаСобытия = 0;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаДанныхИзБазыПриАктивизации(Элемент)
	Данные = Элемент.ПолучитьВыделенныеЭлементы();
	t_нач = 0;
	t_кон = 0;
	Если Данные.Количество()>0 
		И НЕ	Тип(Данные[0])=Тип("ЗначениеДиаграммы") Тогда
		Возврат;
	КонецЕсли;
	Если Данные.Количество()>0 Тогда
		t_нач = Данные[0].Точка.Значение;
		t_кон = Данные[0].Точка.Значение;
	КонецЕсли;
	Для каждого зн из Данные Цикл 
		Если зн.Точка.Значение>t_кон Тогда
			t_кон = зн.Точка.Значение;
		КонецЕсли;
		Если зн.Точка.Значение<t_нач Тогда
			t_нач = зн.Точка.Значение;
		КонецЕсли;
	КонецЦикла;
	ИнтервалНачало = t_нач;
	ИнтервалОкончание = t_кон;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьШиринуОкнаИзБАзы(Команда)
	Если НЕ ЗначениеЗаполнено(ИнтервалНачало) ИЛИ НЕ ЗначениеЗаполнено(ИнтервалОкончание) Тогда
		Возврат;
	КонецЕсли;		
	ДатаСобытияИзБазы=ИнтервалОкончание-Секунда(ИнтервалОкончание);
	ИнтервалИзБазы=ДатаСобытияИзБазы - (ИнтервалНачало-Секунда(ИнтервалНачало));
	ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
	ГотовыеВариантыИнтервалИзБазы=0;
	ГотовыеВариантыИнтервалИзБазыПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВернутьШиринуОкна(Команда)
	Если КешПараметров.Получить("ПредИнтервалНачало")=Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИнтервалНачало = КешПараметров.Получить("ПредИнтервалНачало");
	ИнтервалОкончание = КешПараметров.Получить("ПредИнтервалОкончание");
	ДатаСобытияИзБазы = ИнтервалОкончание-Секунда(ИнтервалОкончание);
	ИнтервалИзБазы=ДатаСобытияИзБазы - (ИнтервалНачало-Секунда(ИнтервалНачало));
	ОбновитьГрафикИсторииКлиент(ДатаСобытияИзБазы,ИнтервалИзБазы);
КонецПроцедуры




#КонецОбласти